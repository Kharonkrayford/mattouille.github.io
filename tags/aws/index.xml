<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws on mattouille.com</title>
    <link>https://mattouille.com/tags/aws/</link>
    <description>Recent content in Aws on mattouille.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mattouille.com/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using return values inside CloudFormation UserData</title>
      <link>https://mattouille.com/articles/2017-12/using-return-values-inside-cloudformation-userdata/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mattouille.com/articles/2017-12/using-return-values-inside-cloudformation-userdata/</guid>
      <description>I&amp;rsquo;ve been working on a project that uses CloudFormation exclusively, so I don&amp;rsquo;t get to do variable interpolation with return values that&amp;rsquo;s as simple as Terraform makes it. Thus, I&amp;rsquo;ve had to do some improvising when generating files based off my infrastructure orchestration.
Unfortunately CloudFormation is not as versatile as AWS would like you to believe, though it does constantly improve. One of the things I really like having is the ability to drop some return values in my UserData that&amp;rsquo;s based on my infrastructure orchestration.</description>
    </item>
    
    <item>
      <title>Taking Security a Step Further with VPC Endpoints</title>
      <link>https://mattouille.com/articles/2017-10/taking-security-a-step-further-with-vpc-endpoints/</link>
      <pubDate>Sun, 29 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mattouille.com/articles/2017-10/taking-security-a-step-further-with-vpc-endpoints/</guid>
      <description>&lt;p&gt;Ever since I wrote &lt;a href=&#34;{{ site.baseurl }}{% post_url 2017-10-16-s3-bucket-security-and-best-practices %}&#34;&gt;S3 Bucket Security and Best Practices&lt;/a&gt; I&amp;rsquo;ve been playing with how to extend security within a given AWS account.&lt;/p&gt;

&lt;p&gt;Policies and KMS are great but to me assurance comes in threes. That said I don&amp;rsquo;t see VPC Endpoints discussed very much when people are talking about S3 Bucket Security, especially for something that&amp;rsquo;s served over a public API!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SendGrid DNS White Labeling and CloudFront for Secure Click Tracking Links</title>
      <link>https://mattouille.com/articles/2017-03/sendgrid-dns-white-labeling-and-cloudfront-for-secure-click-tracking-links/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mattouille.com/articles/2017-03/sendgrid-dns-white-labeling-and-cloudfront-for-secure-click-tracking-links/</guid>
      <description>At StarLeaf we had a need to secure our SendGrid click tracking links, unfortunately our provider, SendGrid, had no way of sending HTTPS traffic with their in place white labeling solution. This is how we solved that.
This solution does not solely apply to SendGrid as it&amp;rsquo;s a generic way to proxy HTTP URL&amp;rsquo;s to HTTPS. You can apply the solution I build here to nearly anything that requires proxying.</description>
    </item>
    
  </channel>
</rss>